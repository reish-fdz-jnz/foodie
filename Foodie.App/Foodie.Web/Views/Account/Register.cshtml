@model Foodie.Web.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    IEnumerable<SelectListItem> roles = (IEnumerable<SelectListItem>)TempData["roles"];
    string roleLabel = "Role";
}

<main>


    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div id="register">
            <h2 id="title">@ViewBag.Title.</h2>
            <h4>Create a new account.</h4>
            <hr />
        </div>
        
        <div class="register-container">
            @Html.ValidationSummary("", new { @class = "text-danger" })

            @Html.LabelFor(m => m.FirstName, new { @class = "register-label" })
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })

            @Html.LabelFor(m => m.LastName, new { @class = "register-label" })
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })

            @Html.LabelFor(m => m.PhoneNumber, new { @class = "register-label" })
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })

            @Html.LabelFor(m => m.Email, new { @class = "register-label" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })

            @Html.LabelFor(m => m.Username, new { @class = "register-label" })
            @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })

            @Html.LabelFor(m => m.Password, new { @class = "register-label" })
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })

            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "register-label" })
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })

            <label class = "register-label">@roleLabel</label>
            @Html.DropDownListFor(m => m.RoleName, roles, new { @id = "roleDropDown", @class = "form-control" })

            <input type="submit" value="Register" class="btn btn-dark register-btn" />
        </div>

    }
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


